module {
  tt.func public @add_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32}) attributes {noinline = false} {
    %0 = tt.make_range {autogradVisited = true, end = 4 : i32, start = 0 : i32} : tensor<4xi32>
    %1 = tt.splat %arg0 {autogradVisited = true} : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>>
    %2 = tt.addptr %1, %0 {autogradVisited = true} : tensor<4x!tt.ptr<f32>>, tensor<4xi32>
    %3 = tt.splat %arg1 {autogradVisited = true} : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>>
    %4 = tt.addptr %3, %0 {autogradVisited = true} : tensor<4x!tt.ptr<f32>>, tensor<4xi32>
    %5 = tt.load %4 {autogradVisited = true} : tensor<4x!tt.ptr<f32>>
    tt.store %2, %5 {autogradVisited = true} : tensor<4x!tt.ptr<f32>>
    tt.return
  }
}